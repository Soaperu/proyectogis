<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="img_user.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        bQAAAG0BjlwfygAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFxSURBVDhPfY3B
        S8JgGMa3CFIK0cqhVIaIRXTp3+hPsOgS0bEu3boEnT10rYsWhBAOatlJwXnIBBHRQVAYiuSg2IiSQCLW
        90jB+83l4Te+93l+DxMsyxpguXu8svR+IjOef5GRObkDQdQ8XVswkl8MedFMrAO8kaGz+9wx/3oWjOip
        t0gntU9zgAwdHJpzUrid3gq35aZgHYzQHCBDB4fPyRF6Uo7mGtcyzSjo4NCME2bvs9uMKs0o6ODQjBOk
        ei4SrKnfgVp+leYAGTo4NOckIJXv9qRy8cNfLu5MVW9nAN7I0Nl97gCBQsU/Xaw0GZaNJjq7zx2Tan3T
        p2qGV9VK3oIW9+W1GMAbGTo4dPP3ET3ZB4VhenKPG1SgoOs7zGWBiKxfjGdauxM3LdOtNEJ04AQcuNjg
        FsaUl6j7Uv90XXX+/bMduNhgK7gujENX2ig5icPABlth9LybYcSdpGFgg60gJnu6kOjFnKRhYCMme/oP
        CUqyHzrcXFcAAAAASUVORK5CYII=
</value>
  </data>
  <data name="img_key.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        bgAAAG4BI+U+pwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAH0SURBVDhPfY3P
        T9pgGMfLopk6FMU6x1JMiIqS7GB6X8I/4MHEP4A/YVfdhesOnjh2MdQouoDMH8gWrFvbg++SVRZAx2Qb
        qWisiaUuQGIih+59izWlvPHw6fP0+30+eQld1x/lVZ0JTNeYeKDGyBA1UGcy07X3s2bfIVjxq+ycv8re
        TqnRnUl1JTRVZef9GhuBWXNSjb5DN1gRMXGxSo1fbdxMXH1YMDP/ZYxE+C7XX48rG03YzXaIJr7K5qKv
        kszBH8dDdp6UEfd9BPaZNsnK2N/dhPdPKmLNvOXUW4TRl3fnx8optU2yQhW5JPWLY3AdwlvMhKjivowt
        X+ZE2pMXNE9eXML1iBcFYceT5+MdBSkBelQC2uh3sAyDJ/Yefhwj0uHCcwnceo5AoK0kgUSTIKsNgx8P
        MpowW4IwIyAbgTNHfsveDB8ezd33Ldkl/qSHhGPNLRYMeVA8CbmFQhhmW0YunCQHhePEEF9YdH/NUabX
        kg9+0wNcSXPtl5aJcOtl10GJH+BO5X7u9AvqTcEO0fdZpp3pM+1ZWjbk/k+VkDMt8zD759w7C+MkK0Tv
        tqL1bStR82W4h3u3FBnNno9K0C7YIZ4mqnpP/DqIQLvBpsrjjnEQXbGG3h1rvEGgvWu9Huxea8zgjnEQ
        DvZOt2I/eByd+A+2P6c4ij5OiQAAAABJRU5ErkJggg==
</value>
  </data>
</root>